{"version":3,"file":"static/js/139.b6955cba.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","componentes/Card.js","features/emailSubscription/emailFuntionalities.js","features/portraitDetails/getPortraitData.js","websitePages/HomePage.js"],"sourcesContent":["export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","import './Card.css';\nfunction Card({iconCard, titleCard, textCard}){\n    return(\n        <div className=\"divCard divColumn\">\n            <img className='imgCard' src={iconCard} alt='icono'></img>      \n            <div className='divColumnCard organizeTextInCard'>\n                <h3 className='cardTitle'>{titleCard}</h3>\n                <p className='cardText'>{textCard}</p>\n            </div>                 \n        </div>\n    );\n}\nexport default Card;","import store from \"../../app/store\";\r\nimport { changeUserEmailAddress } from \"./userEmailAddressSlice\";\r\nimport { switchEnableButtonState } from \"./enableSubscribeButtonSlice\";\r\nimport { displayNotification } from \"../notificationBar/notificationFunctionalities\";\r\nfunction sendSubscriptionEmail() {\r\n    const userEmailAddress = store.getState().userEmailAddressReducer.userEmailAddress;\r\n    window.Email.send({\r\n      SecureToken: \"be618017-4606-4c16-925b-474c0be7185b\",\r\n      To: userEmailAddress,\r\n      From: \"testOnlineStoreReact@gmail.com\",\r\n      Subject: \"Thanks for subscribing!!!\",\r\n      Body: \"Thanks for subcribing ❤️. You will receive news ✉️ from us soon...\",\r\n    })\r\n    .then(function (message) {\r\n      displayNotification(\"Thanks for subscribing. If you dont receive our mail check your spam inbox\", 3000);  \r\n    });\r\n}\r\nfunction enableSubscribeButton(event){\r\n  store.dispatch(switchEnableButtonState(event.target.checkValidity(event.target.value)));\r\n  store.dispatch(changeUserEmailAddress(event.target.value));\r\n}\r\n\r\nexport {sendSubscriptionEmail, enableSubscribeButton};","import fetchData from \"../urlFetch/fetchData\";\r\nimport { apiURL } from \"../../constants\";\r\n\r\nasync function getPortraitData(portraitID){\r\n    try{\r\n        const portraitData = await fetchData(apiURL+`&id=${portraitID}`);\r\n        return portraitData.hits[0];\r\n    }catch{\r\n        return {customError: 'Error'}\r\n    }\r\n}\r\nexport default getPortraitData;","import './HomePage.css';\nimport Card from \"../componentes/Card\";\nimport Portrait from '../features/portraits/Portrait';\nimport { useEffect, useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport { useSelector} from 'react-redux';\nimport { sendSubscriptionEmail, enableSubscribeButton } from '../features/emailSubscription/emailFuntionalities';\nimport { cardsData, frontPagePortraitsIDs } from '../constants';\nimport getPortraitData from '../features/portraitDetails/getPortraitData';\nimport { displayNotification } from '../features/notificationBar/notificationFunctionalities';\n\nfunction HomePage(){\n    const navigate= useNavigate();\n    const userEmailAddress = useSelector((state)=>state.userEmailAddressReducer.userEmailAddress);\n    const isButtonEnabled = useSelector((state)=>state.enableSubscribeButtonReducer.isButtonEnabled);\n    const [homePagePortraits, setHomePagePortraits] = useState([]);\n    useEffect(()=>{\n        (async ()=>{\n            const arrayOfFetch = frontPagePortraitsIDs.map((ID)=>getPortraitData(ID));\n            const arrayOfComponents = [];\n            for await (let portraitData of arrayOfFetch){\n                if (portraitData.customError){\n                    displayNotification(\"Some error has occurred, check your internet connection or try again later...\", 2000);\n                }else{\n                    arrayOfComponents.push(\n                        <Portrait key={portraitData.id} portraitID={portraitData.id} price={portraitData.webformatHeight}                                   \n                                  tags={portraitData.tags} imagePreview={portraitData.webformatURL} \n                        />\n                    )\n                }\n            }\n            setHomePagePortraits(arrayOfComponents.slice());\n        })()      \n      },[])\n    const cardsArray = cardsData.map((cardData,index)=>{\n        return(\n            <Card key={index} iconCard={cardData.iconCard} titleCard={cardData.titleCard} textCard={cardData.textCard} />\n        )\n    })       \n    return(\n        <div className='divHome divColumn'>\n            <div className='section1 divColumn'>\n                <h1 className=\"section1Title\">Portraitify</h1>\n                <p className='section1Text'>...the right portrait awaits you</p>\n                <button type='button' className='shopNowBtn' onClick={()=>navigate('products/pageNum/1')} >SHOP NOW</button>                       \n            </div>\n            <div className='section2 divColumn'>\n                <h2 className='section2Title'>Featured Portraits</h2>\n                <div className='organizeImgPreview'>\n                    {homePagePortraits}\n                </div>\n                <button className='shopNowBtn section2Btn' onClick={()=>navigate('products/pageNum/1')} >All portraits</button>\n            </div>\n            <div className='section3'>\n                {cardsArray}\n            </div>\n            <div className='section4 divColumn'>\n                <h3 className='section4Title'>Join our newsletter and get 10% off</h3>\n                <p className='textSection4'>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Iusto, at sed omnis corporis doloremque possimus velit! Repudiandae nisi odit, aperiam odio ducimus, obcaecati libero et quia tempora excepturi quis alias?</p>                   \n                <div className='divRow'>\n                    <input type='email' placeholder='Enter Email' className={'emailInput'+((isButtonEnabled)?'':' redInput')} required \n                           value={userEmailAddress} onChange={enableSubscribeButton} \n                           onKeyDown={(event)=>{\n                            if(isButtonEnabled && event.key==='Enter'){\n                                sendSubscriptionEmail();\n                            }\n                        }}>\n                    </input>\n                    <button type='button' className={'sendEmailBtn'+ ((isButtonEnabled)?'':' disabledBtn')} \n                            disabled={!isButtonEnabled} onClick={sendSubscriptionEmail}>\n                            Subscribe 🔔\n                    </button>\n                </div>                    \n             </div>\n        </div>\n    );\n}\n\nexport default HomePage;"],"names":["_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","this","n","next","prototype","apply","arguments","ret","thr","iconCard","titleCard","textCard","className","src","alt","sendSubscriptionEmail","userEmailAddress","store","userEmailAddressReducer","window","Email","send","SecureToken","To","From","Subject","Body","message","displayNotification","enableSubscribeButton","event","switchEnableButtonState","target","checkValidity","changeUserEmailAddress","portraitID","fetchData","apiURL","portraitData","hits","customError","navigate","useNavigate","useSelector","state","isButtonEnabled","enableSubscribeButtonReducer","useState","homePagePortraits","setHomePagePortraits","useEffect","arrayOfFetch","frontPagePortraitsIDs","ID","getPortraitData","arrayOfComponents","push","Portrait","id","price","webformatHeight","tags","imagePreview","webformatURL","slice","cardsArray","cardsData","cardData","index","type","onClick","placeholder","required","onChange","onKeyDown","key","disabled"],"sourceRoot":""}